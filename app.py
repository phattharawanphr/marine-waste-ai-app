import streamlit as st
from inference_sdk import InferenceHTTPClient
from PIL import Image

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ client ‡∏Ç‡∏≠‡∏á Roboflow
CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="TCwrOT5oJu5pTNpnNKSV"
)

st.set_page_config(page_title="üåä Marine Waste AI", page_icon="üåä")
st.title("üåä Marine Waste AI")
st.markdown("‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏Ç‡∏¢‡∏∞‡∏ó‡∏∞‡πÄ‡∏• ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏• AI ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÉ‡∏ô Roboflow")

uploaded = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏Ç‡∏¢‡∏∞", type=["jpg", "jpeg", "png"])

if uploaded:
    image = Image.open(uploaded)
    image.save("temp.jpg")
    st.image(image, caption="‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", use_column_width=True)

    with st.spinner("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå..."):
        result = CLIENT.infer("temp.jpg", model_id="marine-waste-ai-wb2eb/3")

    pred_class = result["predictions"][0]["class"]
    confidence = result["predictions"][0]["confidence"] * 100

    st.success(f"‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: **{pred_class}** ({confidence:.2f}%)")
    st.balloons()
